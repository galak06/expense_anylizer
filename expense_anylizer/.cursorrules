# Curser - Expense Analyzer

## Project Overview
Curser is a privacy-first personal finance tool that ingests bank/credit-card exports, provides powerful filtering, and uses an intelligent agent to suggest expense categories with continuous learning.

## Architecture
- **Core modules** (`core/`): Business logic for I/O, cleaning, categorization, and aggregation
- **Streamlit app** (`app/`): Web UI for file upload, filtering, and visualization
- **Data** (`data/`): Keyword-to-category mappings and sample data
- **Tests** (`tests/`): Comprehensive unit tests for all core functionality

## Key Features
- Multi-format file import (CSV/XLSX) with Hebrew/RTL support
- Three-tier categorization agent (keyword → fuzzy → LLM)
- Continuous learning from user feedback
- Rich analytics and export capabilities
- Privacy-first design (local processing)

## Code Style
- Use type hints for all function parameters and return values
- Follow PEP 8 style guidelines
- Include comprehensive docstrings for all public functions
- Write unit tests for all core functionality
- Handle edge cases gracefully with appropriate error messages

## Testing
- Run tests with `python -m pytest tests/`
- Aim for >90% test coverage
- Test both happy path and edge cases
- Use fixtures for common test data

## Dependencies
- pandas: Data manipulation and analysis
- streamlit: Web UI framework
- plotly: Interactive visualizations
- rapidfuzz: Fuzzy string matching
- openai: Optional LLM integration
- chardet: Encoding detection

## File Organization
- Keep related functionality in the same module
- Use clear, descriptive function and variable names
- Separate concerns (I/O, cleaning, categorization, aggregation)
- Maintain backward compatibility when possible
